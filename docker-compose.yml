version: '3'
# A service is a container. 
services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "3000:80"
    volumes: 
      # Sync with a bind mount volume. The path "/etc/nginx/conf.d/default.conf" is where nginx stores its config file in its container.
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  node-app:
    # Build the image from our Dockerfile when we do "docker compose up". "." is the path to our Dockerfile. 
    build: . #

    # When we use the command "docker pull", it will pull this image from Dockerhub. We do this on the production server.
    image: jonasjonasdocker/node-app 

    # All the configurations from the docker run command. Port to open, bind mount volume, anonymous volume, env file,  
   
    # When we use nginx we don't need to map ports for node-app container. 
    #ports:
      #- "3000:3000"
    
    environment:
      - Port=3000
    # Note that this will not check e.g. that the actual db inside the mongo container is up and running before node-app is started. 
    depends_on:
      - mongo
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=jonas
      - MONGO_INITDB_ROOT_PASSWORD=1234
    volumes:
      # a named volume with name "mongo-db". 
      - mongo-db:/data/db # nameofvolume:pathincontainer
  redis:
    image: redis

# A named volume can be used by multiple services. That is why we need to add this.
volumes:
  mongo-db:
